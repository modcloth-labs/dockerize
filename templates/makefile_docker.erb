<% self.filename = 'Makefile.docker' -%>
<% self.executable = false -%>
DOCKER ?= sudo docker
REV ?= $(shell git describe --always)
BUILD_FLAGS ?= -no-cache=true -rm=true
PROJECT ?= $(shell basename $(PWD))
REGISTRY ?= <%= registry %>
LATEST ?= $(shell $(DOCKER) images | grep -v REPOSITORY | head -n 1 | grep -E '$(REGISTRY)\/$(PROJECT)' | awk '{print $$3}')

export DOCKER
export REV
export BUILD_FLAGS
export PROJECT
export REGISTRY
export LATEST

all:
  @echo "Available targets:"
  @echo "  * clean     - remove all local images (and tags) for $(PROJECT)"
  @echo "  * build     - build and tag the latest a Docker container for $(PROJECT)"
  @echo "  * pull      - pull down previous docker builds of $(REGISTRY)/$(PROJECT)"
  @echo "  * push      - push $(REGISTRY)/$(PROJECT)"
  @echo "  * tag       - tags the lastest image as 'latest' (run as part of build as well)"

build: container tag

container:
  $(DOCKER) build -t $(REGISTRY)/$(PROJECT):$(REV) $(BUILD_FLAGS) .

tag:
  ( test -z "$(LATEST)" && echo 'Nothing to tag!' ) || $(DOCKER) tag $(LATEST) $(REGISTRY)/$(PROJECT):latest

clean:
  $(DOCKER) rm $(shell docker ps -a -q)
  export IMAGES="$(shell $(DOCKER) images | grep -E '<none>')" ; \
    test -z "$$IMAGES" || echo "$$IMAGES" | awk '{ print $$3 }' | \
    sort | uniq | xargs $(DOCKER) rmi

pull:
  $(DOCKER) pull $(REGISTRY)/$(PROJECT) || true

push:
  $(DOCKER) push $(REGISTRY)/$(PROJECT) || true

.PHONY: build container tag clean pull push all
